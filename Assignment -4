#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct club_information *create();
void add_members(int m, struct club_information *head);
void display(struct club_information *head);
void AddM(int m, struct club_information *head);
void add_secretary(struct club_information *head);
struct club_information *DeleteP(struct club_information *head);

struct club_information
{
    int prn, rollno;
    char name[20];
    struct club_information *next;
};

int main()
{

    struct club_information *head;
    struct club_information *tt;
    int ch, m;
    do
    {
        printf("\nWhich operation do you want to perform :- ");
        printf("\n 1)Add president");
        printf("\n 2)Add secretary");
        printf("\n 3)Add members");
        printf("\n 4)Delete Presitent");
        printf("\n 5)Display");
        printf("\n 7)Exit");
        printf("\nYour choice : ");
        scanf("%d", &ch);

        switch (ch)
        {
        case 1:
            head = create();
            break;

        case 2:
            add_secretary(head);
            break;

        case 3:
            printf("\nEnter the number of members to add : ");
            scanf("%d", &m);
            add_members(m, head);
            // AddM(m, head);
            break;

        case 4:
            tt = DeleteP(head);
            head = tt;
            break;

        case 5:
            display(head);
            break;

        case 7:
            printf("\n Thank you :)  \n");
            break;

        default:
            printf("\n Invalid Entry !!! \n");
            break;
        }
    } while (ch != 7);
}

struct club_information *create()
{
    struct club_information *temp;
    temp = (struct club_information *)malloc(sizeof(struct club_information));

    char n[20];

    printf("\nEnter the roll no., PRN and name of the member : \n");
    scanf("%d %d %s", &temp->rollno, &temp->prn, n);

    strcpy(temp->name, n);

    return temp;
}

void add_members(int m, struct club_information *head)
{
    struct club_information *temp;
    char n[20];
    printf("\n\n%d\n\n", m);
    for (int i = 0; i < m; i++)
    {
        temp = (struct club_information *)malloc(sizeof(struct club_information));
        printf("\nEnter the roll no., PRN and name of the member : \n");
        scanf("%d %d %s", &temp->rollno, &temp->prn, n);

        strcpy(temp->name, n);
        temp->next = NULL;
        head->next = temp;
        head = head->next;
    }
}

// void AddM(int m, struct club_information *head)
// {
//     struct club_information *temp;
//     char na[20];

//     for (int i = 0; i < m; i++)
//     {
//         temp = (struct club_information *)malloc(sizeof(struct club_information));
//         printf("\n Enter PRN , Roll_No , Name : ");
//         scanf("%d %d %s", &temp->prn, &temp->rollno, na);
//         strcpy(na, temp->name);
//         temp->next = NULL;
//         head->next = temp;
//         head = head->next;
//     }
// }

void display(struct club_information *head)
{
    while (head != NULL)
    {
        printf("\n%d %d %s", head->rollno, head->prn, head->name);
        head = head->next;
    }
}

void add_secretary(struct club_information *head)
{

    struct club_information *temp;
    temp = (struct club_information *)malloc(sizeof(struct club_information));

    char n[20];

    printf("\nEnter the roll no., PRN and name of the secretary : \n");
    scanf("%d %d %s", &temp->rollno, &temp->prn, n);
    strcpy(temp->name, n);

    while (head != NULL && head->next != NULL)
    {
        head = head->next;
    }
    head->next = temp;
}

struct club_information *DeleteP(struct club_information *head)
{
    struct club_information *p;
    p = head;
    head = head->next;
    free(p);
    return head;
}
